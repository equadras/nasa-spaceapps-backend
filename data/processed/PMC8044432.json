{
  "id": "PMC8044432",
  "pmc_link": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8044432/",
  "title": "NASA GeneLab RNA-seq consensus pipeline: standardized processing of short-read RNA-seq data",
  "authors": "Eliah G. Overbey, Amanda M. Saravia-Butler, Zhe Zhang, Komal S. Rathi, Homer Fogle, Willian A. da Silveira, Richard J. Barker, Joseph J. Bass, Afshin Beheshti, Daniel C. Berrios, Elizabeth A. Blaber, Egle Cekanaviciute, Helio A. Costa, Laurence B. Davin, Kathleen M. Fisch, Samrawit G. Gebre, Matthew Geniza, Rachel Gilbert, Simon Gilroy, Gary Hardiman, Raúl Herranz, Yared H. Kidane, Colin P.S. Kruse, Michael D. Lee, Ted Liefeld, Norman G. Lewis, J. Tyson McDonald, Robert Meller, Tejaswini Mishra, Imara Y. Perera, Shayoni Ray, Sigrid S. Reinsch, Sara Brin Rosenthal, Michael Strong, Nathaniel J. Szewczyk, Candice G.T. Tahimic, Deanne M. Taylor, Joshua P. Vandenbrink, Alicia Villacampa, Silvio Weging, Chris Wolverton, Sarah E. Wyatt, Luis Zea, Sylvain V. Costes, Jonathan M. Galazka",
  "year": "2021",
  "journal": "iScience",
  "abstract": "Summary With the development of transcriptomic technologies, we are able to quantify precise changes in gene expression profiles from astronauts and other organisms exposed to spaceflight. Members of NASA GeneLab and GeneLab-associated analysis working groups (AWGs) have developed a consensus pipeline for analyzing short-read RNA-sequencing data from spaceflight-associated experiments. The pipeline includes quality control, read trimming, mapping, and gene quantification steps, culminating in the detection of differentially expressed genes. This data analysis pipeline and the results of its execution using data submitted to GeneLab are now all publicly available through the GeneLab database. We present here the full details and rationale for the construction of this pipeline in order to promote transparency, reproducibility, and reusability of pipeline data; to provide a template for data processing of future spaceflight-relevant datasets; and to encourage cross-analysis of data from other databases with the data available in GeneLab.",
  "keywords": "Omics, Space Sciences",
  "full_text": "Introduction Opportunities to perform biological studies in space are rare due to high costs and a limited number of funding sources, rocket launches, and spaceflight crew hours for experimental procedures. In addition, spaceflight research is decentralized and distributed across numerous laboratories in the United States and abroad. As a result, studies performed in different laboratories often utilize different organisms, strains, cell lines, and experimental procedures. Adding to this complexity are variance in spaceflight factors and/or confounders within each study, such as degree of radiation exposure, experiment duration, CO 2  concentration, light cycle, and water availability, all of which can have effects on an organism's health and gene expression profiles during spaceflight ( Rutter et al., 2020 ). In order to optimize the integration of data from this diverse array of spaceflight experiments, it is paramount that variations in data processing are minimized. There is presently no consensus on how best to analyze RNA-seq data, and the impact of analysis tool selection on results is an active field of research. Indeed, selections of trimming parameters ( Williams et al., 2016 ), read aligner ( Yang et al., 2015 ), quantification tool ( Teng et al., 2016 ), and differential expression detection algorithm ( Costa-Silva et al. 2017 ) all affect results. Because of such challenges, groups such as ENCODE and MINSEQE have developed standardized analysis pipelines for better comparison of RNA-seq datasets ( ENCODE Project Consortium et al., 2020 ;  Functional Genomics Data Society, 2012 ). The NASA GeneLab database ( https://genelab-data.ndc.nasa.gov/genelab/projects ) was created as a central repository for spaceflight-related omics-data. The repository includes data from experiments that profile transcription (RNA-seq, microarray), DNA/RNA methylation, protein expression, metabolite pools, and metagenomes. The most prevalent data type in this repository is RNA-seq from organisms exposed to spaceflight conditions. As of August 2020, the NASA GeneLab database has over eighty datasets with RNA-sequencing data ( Table S1 ). These datasets include  Homo sapiens  (human),  Mus musculus  (mouse),  Drosophila melanogaster  (fruit fly),  Arabidopsis thaliana  (model higher plant),  Oryzias latipes  (Japanese rice fish),  Helix lucorum  (land snail),  Brassica rapa  (Fast Plant),  Eruca vesicaria  (arugula/edible plant),  Euprymna scolopes  (Hawaiian bobtail squid),  Ceratopteris richardii  (aquatic fern), and the bacterium,  Bacillus subtilis  from experiments performed during true spaceflight on various orbital platforms such as the Space Shuttle and International Space Station (ISS), as well as spaceflight-analog studies, such as hindlimb unloading and bed rest studies ( Berrios et al., 2020 ). NASA's GeneLab and Ames Life Sciences Data Archive (ALSDA) projects have put forward an ambitious strategy focused on integrating data, metadata, and biospecimens to fully utilize the 40+ years of archived NASA Life Sciences data ( Scott et al., 2020 ). One of the first steps in this effort is the ability to analyze how experimental factors common to multiple datasets impact molecular signaling. Such meta-analysis can only occur if metadata, data, and processed data are harmonized. As part of this strategy, GeneLab engaged with the scientific community and held its first Analysis Working Group (AWG) workshop in 2018. Spaceflight researchers from universities and organizations across the United States and abroad met to begin the creation of a standardized, consensus data-processing pipeline for one of the most common types of spaceflight datasets: transcription profiling via RNA-sequencing. Scientists at this workshop met to discuss the merits of various bioinformatic software tools for processing RNA-sequencing data and ultimately agreed on a single pipeline of these tools. The main driver for developing the consensus pipeline was to present consistently processed data to the public, therefore making space-relevant multi-omics data more accessible and reusable. The overall goals were (1) to get more consistently processed data to the public; (2) to provide output data from every step of the consensus pipeline so users can download and use these “intermediate” data; (3) to support easier and more consistent analysis of space-relevant data by users including those in the NASA AWGs; and (4) to allow easier cross-analysis of experiments to identify effects that result from the spaceflight environment, independent of confounding factors. In addition, many of these data in the GeneLab database have not been previously analyzed, as their generation was relatively recent. Therefore, providing new and processed datasets to the public allows biologists and others to more easily interpret these data and contributes significantly to our collective knowledge of the effects of spaceflight on terrestrial organisms. Here we present the RNA-seq consensus pipeline (RCP) developed by the GeneLab AWG along with the rationale behind the tool settings and options selected. The RCP includes three distinct steps: data pre-processing, data processing, and differential gene expression computation/annotation ( Figure 1 A). These steps use tools for quality control (FastQC, MultiQC) ( Andrews, 2010 ;  Ewels et al., 2016 ), read trimming (TrimGalore) ( Krueger 2019 ), mapping (STAR) ( Dobin et al., 2013 ), quantification (RSEM) ( Li and Dewey 2011 ), and differential gene expression calculation/annotation (DESeq2) ( Love et al. 2014 ) ( Figure 1 B). The RCP has been integrated into the GeneLab database, and files produced by the RCP for each RNA-seq dataset hosted in GeneLab are and will continue to be publicly available for download. Figure 1 GeneLab RNA-seq Consensus Pipeline (RCP) (A) The three broad steps of the RCP. The RCP handles (1) data preprocessing to trim sequencing adapters and to provide quality control metrics; (2) data processing to map reads to the reference genome and quantify the number of read counts per gene; and (3) differential gene expression calculation, which will provide a list of differentially expressed genes that can be sorted by adjusted p value and log fold-change. (B) The full RCP annotated with tools, input files, and output files. Results Data pre-processing: quality control and trimming There are three distinct steps to the RCP, the first of which is data preprocessing ( Figure 2 A). The pipeline begins with quality control (QC) of raw FASTQ files from a short-read Illumina sequencer using the FastQC software ( Andrews, 2010 ) ( Figure 2 B). FastQC is one of the most widely used QC programs for short-read sequencing data. It provides information that can be used to assess sample and sequencing quality, including base statistics, per base sequencing quality, per sequence quality scores, per base sequence content, per base GC content, per sequence GC content, per base N content, sequence length distributions, sequence duplication levels, overrepresented sequences, and k-mer content. Figure 2 Data preprocessing (pipeline step 1): quality control and trimming (A) Data preprocessing pipeline. FastQ files from Illumina base-calling software are quality checked using FastQC and MultiQC. Data are then trimmed using TrimGalore and are re-checked for quality; (B) flags used for FastQC program; (C) flags used for MultiQC program; (D) flags used for TrimGalore program; trimmed reads (∗fastq.gz) are then used as input data for FastQC (B) followed by MultiQC (C) to generate trimmed read quality metrics. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository. The FastQC program is run on each individual sample file. However, reviewing the FastQC results for each sample file can be tedious and time consuming. Experiments typically have many sample files (biological and/or technical replicates) for multiple experimental conditions (spaceflight, ground control, etc.). For this reason, we also use the MultiQC package ( Ewels et al., 2016 ) ( Figure 2 C) to create a summary statistics report that includes the same quality control result categories from FastQC across all experiment samples. After performing quality control on the raw FASTQ data, reads are trimmed using TrimGalore ( Krueger 2019 ) to remove sequencing adapters and low-quality bases that would disrupt read mapping during the data processing pipeline step ( Figure 2 D). TrimGalore is a wrapper program that uses the cutadapt program ( Martin 2011 ) for read trimming. TrimGalore was selected for the RCP due to its simplified command line interface, thorough output of trimming metrics, and ability to automatically detect adapters. In this step, bases that are part of a sequencing adapter or of low quality are removed from each read, and reads that become too short are subsequently removed. After trimming, the quality control programs, FastQC and MultiQC, are again run on the trimmed FASTQ files for viewing the quality control metrics of the reads that will be used for data processing. Once the data have been preprocessed, the sequenced reads are ready for mapping and quantification. Data processing: read mapping and sample quantification In the data processing step ( Figure 1 ; Step 2A), the trimmed reads are first aligned to the reference genome ( Figure 3 A) with STAR, a splice-aware aligner ( Dobin et al., 2013 ). STAR must be run in two steps. The first step is to create indexed genome files ( Figure 3 B). These files are used to assist read mapping and only need to be generated once for each reference genome file. This step requires reference FASTA and GTF files ( Table S2 ). Some datasets include the External RNA Control Consortium (ERCC) spike-in control—a pool of 96 synthetic RNAs with various lengths and GC content covering a 2 20  concentration range ( Jiang et al., 2011 ). If ERCC spike-ins were included, the spike-in FASTA and GTF files are appended to the reference FASTA and GTF files, respectively. The second step of STAR mapping is to use the indexed reference genome and the trimmed reads from the preprocessing step in order to map the reads to the genome and the transcriptome ( Figure 3 C). STAR will also produce genome mapped data, which can optionally be used to find reads that map outside of annotated reference transcripts. STAR mapping output data are in Binary Alignment Map (BAM) format, which has a separate entry for each mapped read and states which transcript each read is mapped to. In order to improve the detection and quantification of splice sites, STAR is run in “two-pass mode.” Here, splice sites are detected in the initial mapping to the reference and used to build a new reference that includes these splice sites. Reads are then re-mapped to this dynamically generated reference to improve the quantification of splice isoforms ( Dobin et al., 2013 ). Users are provided with these results (as per sample SJ.out files) for further analysis of differential splicing. Figure 3 Data processing (pipeline step 2A): read mapping (A) Data processing pipeline. Trimmed reads are mapped to their reference genome and transcriptome with STAR. Gene counts are then quantified with RSEM; (B) flags used for generating the indexed STAR reference files; (C) flags used for mapping reads with STAR. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository. The second part of processing is quantifying the number of reads mapped to each annotated transcript and gene ( Figure 1 A; Step 2B,  Figure 4 A). For this task, the RCP uses RSEM ( Li and Dewey 2011 ). The main reasons for using RSEM are its ability to account for reads that map to multiple transcripts and distinguish gene isoforms. In short-read sequencing experiments it is likely that some number of reads will map to multiple regions in the genome. RSEM computes maximum likelihood abundance estimates to split the read count across multiple genes. Similar to STAR, RSEM is run in two distinct phases ( Figure 4 A). The first phase uses the reference genome and GTF files (with or without ERCC as appropriate) ( Table S2 ) to prepare indexed genome files ( Figure 4 B). The second phase uses the indexed files and the mapped reads from STAR to assign counts to each gene ( Figure 4 C). There are two output files generated for each sample: counts assigned to genes and counts assigned to isoforms. Gene counts are used to calculate differential gene expression. Isoform counts are also generated as an option to look at differential isoform expression but are not used during differential gene expression calculation in the RCP. Once the RSEM count files are generated, the data are used to compute differentially expressed genes. A list of the reference genomes used in the GeneLab pipeline is available in  Table S2  . These reference genomes were the most recent releases at the time each STAR and RSEM indexed references were created. Although it is possible to run STAR mapping through the RSEM toolkit, we elected not to do this because the alignment parameters used in this case are from ENCODE's STAR-RSEM pipeline and are not customizable. Thus, we would have been precluded from using the precise mapping parameters agreed to by the GeneLab AWG. Figure 4 Data processing (pipeline step 2B): gene quantification (A) Data processing pipeline. Mapping results from STAR are quantified by RSEM; (B) parameters for RSEM indexed reference files generation; (C) parameters for quantifying gene and isoform counts with RSEM. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS repository. We elected to adopt a mapping-based approach rather than rapidly quantifying the reads via a k-mer-based counting algorithm, pseudo-aligners, or a quasi-mapping method that utilizes RNA-seq inference procedures such as Kallisto ( Bray et al., 2016 ) or Salmon ( Patro et al., 2017 ) despite their speed advantages. This is because alignment-free quantification tools do not accurately quantify low-abundant and small RNAs especially when biological variation is present ( Wu et al., 2018 ). Furthermore, alignment of reads allows for additional analyses beyond transcript and gene quantification such as measurement of gene body coverage and detection of novel transcripts. There are several alignment-based mapping tools available and each has advantages and disadvantages. An alignment tool that is sensitive to splice-isoforms is critical to accurately identify how expression of splice-isoforms is affected by the spaceflight environment. DNA-specific aligners such as BWA ( Li and Durbin 2009 ) and Bowtie ( Langmead et al., 2009 ) cannot handle intron-sized gaps and thus an RNA-seq-specific aligner is needed ( Baruzzo et al., 2017 ). In addition to splice-awareness, when selecting an aligner the following criteria were also considered: ability to input both single- and paired-end reads, handle strand-specific data, applicability to a variety of different model organisms with both low- and high-complexity genomic regions, efficient runtime and memory usage, ability to identify chimeric reads, high sensitivity, low rate of false discovery, and ability to output both genome and transcriptome alignments. Several studies have been conducted to compare the wide variety of available RNA-seq specific alignment tools, and of these, the STAR aligner consistently performs better than or on par with the tools tested for the indicated criteria ( Baruzzo et al., 2017 ;  Schaarschmidt et al., 2020 ;  Raplee et al. 2019 ). Differential gene expression calculations and addition of gene annotations Once reads have been mapped and quantified, differential expression analysis is performed using the DESeq2 R package ( Figure 1 ; Step 3,  Figure 5 A). Unlike the previous steps, a custom R script (GeneLab_DGE_wERCC.R or GeneLab_DGE_noERCC.R) ( Data S1 and  S2 ) is used to run DESeq2; to create both unnormalized and normalized counts tables; and to generate a differential gene expression (DGE) output table containing normalized counts for each sample, DGE results, and gene annotations ( Figure 5 B). The GeneLab DGE R script also creates computer-readable tables that are used by the GeneLab visualization portal to generate various plots so users can easily view and begin interpreting the processed data. These scripts are provided in the NASA GeneLab_Data_Processing Github repository ( https://github.com/nasa/GeneLab_Data_Processing ). In the following sections we describe each step of these scripts in order. Figure 5 Differential gene expression calculation (pipeline step 3) (A) Data processing pipeline. The R program DESeq2 is run in order to determine which genes are differentially expressed between experimental conditions using gene count files from RSEM. (B) Output files generated. The table columns distinguish which script produces each output. The columns distinguish how those output files are used. The GeneLab DGE R script requires three inputs: the quantified count data from the previous (RSEM) step; sample metadata from the Investigation, Study, and Assay (ISA) tables in the ISA.zip file (provided in the GeneLab repository with each dataset) ( Sansone et al., 2012 ;  Rocca-Serra et al., 2010 ); and the organisms.csv file ( Table S3 ), which is used to specify the organism used in the study and relevant gene annotations to load. Because samples from some GeneLab RNA-seq datasets contain ERCC spike-in and others do not, there are two versions of the GeneLab DGE R script, one for datasets with ERCC spike-in (GeneLab_DGE_wERCC.R,  Data S1 ) and one for those without (GeneLab_DGE_noERCC.R,  Data S2 ). Prior to running either script, paths to directories containing the input data and the output data location must be defined. Each script starts by defining the organism used in the study, which should be consistent with the name in the organisms.csv file so that it matches the abbreviations used in the PANTHER database ( Mi et al. 2013 ;  Thomas 2003 ) for that organism. Next, the metadata from the ISA.zip file are imported and formatted for use with the DESeq2 package. During metadata formatting, groups for comparison are defined based on experimental factors, and a sample table is created to specify the group to which each sample belongs. Next, a contrasts matrix is generated, which specifies the groups that will be compared during DGE analysis; each group is compared with every other group in a pairwise manner in both directions (i.e. spaceflight versus ground and ground versus spaceflight). This approach provides the user with the results for all possible group comparisons, allowing each user to select the most relevant comparisons for their particular scientific questions. After metadata formatting, the RSEM gene count data files from each sample are listed and re-ordered (to match the order the samples appear in the metadata), then imported with the R package, tximport ( Soneson et al., 2015 ), and sample names are assigned. Prior to running DESeq2, a value of 1 is added to genes with lengths of zero, which is necessary to make a DESeqDataSet object. A DESeqDataSet object is then created using the formatted metadata and the count data that was imported with tximport. For datasets that contain samples with ERCC spike-in, we use the GeneLab_DGE_wERCC.R script ( Data S1 ). To reduce the possibility of skewing the data during DESeq2 normalization ( McIntyre et al., 2011 ;  Risso et al., 2011 ;  Conesa et al., 2016 ;  Law et al., 2016 ), all genes that have a sum of less than 10 counts across all samples are removed. The cutoff value of 10 is a best practice recommended by the DESeq2 tutorial on Bioconductor. These filtered data are then prepared for normalization and DGE analysis with DESeq2. Because there is no consensus for whether ",
  "introduction": "Introduction Opportunities to perform biological studies in space are rare due to high costs and a limited number of funding sources, rocket launches, and spaceflight crew hours for experimental procedures. In addition, spaceflight research is decentralized and distributed across numerous laboratories in the United States and abroad. As a result, studies performed in different laboratories often utilize different organisms, strains, cell lines, and experimental procedures. Adding to this complexity are variance in spaceflight factors and/or confounders within each study, such as degree of radiation exposure, experiment duration, CO 2  concentration, light cycle, and water availability, all of which can have effects on an organism's health and gene expression profiles during spaceflight ( Rutter et al., 2020 ). In order to optimize the integration of data from this diverse array of spaceflight experiments, it is paramount that variations in data processing are minimized. There is presently no consensus on how best to analyze RNA-seq data, and the impact of analysis tool selection on results is an active field of research. Indeed, selections of trimming parameters ( Williams et al., 2016 ), read aligner ( Yang et al., 2015 ), quantification tool ( Teng et al., 2016 ), and differential expression detection algorithm ( Costa-Silva et al. 2017 ) all affect results. Because of such challenges, groups such as ENCODE and MINSEQE have developed standardized analysis pipelines for better comparison of RNA-seq datasets ( ENCODE Project Consortium et al., 2020 ;  Functional Genomics Data Society, 2012 ). The NASA GeneLab database ( https://genelab-data.ndc.nasa.gov/genelab/projects ) was created as a central repository for spaceflight-related omics-data. The repository includes data from experiments that profile transcription (RNA-seq, microarray), DNA/RNA methylation, protein expression, metabolite pools, and metagenomes. The most prevalent data type in this repository is RNA-seq from organisms exposed to spaceflight conditions. As of August 2020, the NASA GeneLab database has over eighty datasets with RNA-sequencing data ( Table S1 ). These datasets include  Homo sapiens  (human),  Mus musculus  (mouse),  Drosophila melanogaster  (fruit fly),  Arabidopsis thaliana  (model higher plant),  Oryzias latipes  (Japanese rice fish),  Helix lucorum  (land snail),  Brassica rapa  (Fast Plant),  Eruca vesicaria  (arugula/edible plant),  Euprymna scolopes  (Hawaiian bobtail squid),  Ceratopteris richardii  (aquatic fern), and the bacterium,  Bacillus subtilis  from experiments performed during true spaceflight on various orbital platforms such as the Space Shuttle and International Space Station (ISS), as well as spaceflight-analog studies, such as hindlimb unloading and bed rest studies ( Berrios et al., 2020 ). NASA's GeneLab and Ames Life Sciences Data Archive (ALSDA) projects have put forward an ambitious strategy focused on integrating data, metadata, and biospe",
  "methods": "Methods All methods can be found in the accompanying  transparent methods supplemental file .",
  "results": "Results Data pre-processing: quality control and trimming There are three distinct steps to the RCP, the first of which is data preprocessing ( Figure 2 A). The pipeline begins with quality control (QC) of raw FASTQ files from a short-read Illumina sequencer using the FastQC software ( Andrews, 2010 ) ( Figure 2 B). FastQC is one of the most widely used QC programs for short-read sequencing data. It provides information that can be used to assess sample and sequencing quality, including base statistics, per base sequencing quality, per sequence quality scores, per base sequence content, per base GC content, per sequence GC content, per base N content, sequence length distributions, sequence duplication levels, overrepresented sequences, and k-mer content. Figure 2 Data preprocessing (pipeline step 1): quality control and trimming (A) Data preprocessing pipeline. FastQ files from Illumina base-calling software are quality checked using FastQC and MultiQC. Data are then trimmed using TrimGalore and are re-checked for quality; (B) flags used for FastQC program; (C) flags used for MultiQC program; (D) flags used for TrimGalore program; trimmed reads (∗fastq.gz) are then used as input data for FastQC (B) followed by MultiQC (C) to generate trimmed read quality metrics. Tool versions used to process each dataset are included in the RNA-seq processing protocol in the GLDS Repository. The FastQC program is run on each individual sample file. However, reviewing the FastQC results for each sample file can be tedious and time consuming. Experiments typically have many sample files (biological and/or technical replicates) for multiple experimental conditions (spaceflight, ground control, etc.). For this reason, we also use the MultiQC package ( Ewels et al., 2016 ) ( Figure 2 C) to create a summary statistics report that includes the same quality control result categories from FastQC across all experiment samples. After performing quality control on the raw FASTQ data, reads are trimmed using TrimGalore ( Krueger 2019 ) to remove sequencing adapters and low-quality bases that would disrupt read mapping during the data processing pipeline step ( Figure 2 D). TrimGalore is a wrapper program that uses the cutadapt program ( Martin 2011 ) for read trimming. TrimGalore was selected for the RCP due to its simplified command line interface, thorough output of trimming metrics, and ability to automatically detect adapters. In this step, bases that are part of a sequencing adapter or of low quality are removed from each read, and reads that become too short are subsequently removed. After trimming, the quality control programs, FastQC and MultiQC, are again run on the trimmed FASTQ files for viewing the quality control metrics of the reads that will be used for data processing. Once the data have been preprocessed, the sequenced reads are ready for mapping and quantification. Data processing: read mapping and sample quantification In the data processing step ( Figure 1 ; Step 2A), the trimmed reads are first aligned to the reference genome ( Figure 3 A) with STAR, a splice-aware aligner ( Dobin et al., 2013 ). STAR must be run in two steps. The first step is to create indexed genome files ( Figure 3 B). These files are used to assist read mapping and only need to be generated once for each reference genome file. This step requires reference FASTA and GTF files ( Table S2 ). Some datasets include the External RNA Control Consortium (ERCC) spike-in control—a pool of 96 synthetic RNAs with various lengths and GC content covering a 2 20  concentration range ( Jiang et al., 2011 ). If ERCC spike-ins were included, the spike-in FASTA and GTF files are appended to the reference FASTA and GTF files, respectively. The second step of STAR mapping is to use the indexed reference genome and the trimmed reads from the preprocessing step in order to map the reads to the genome and the transcriptome ( Figure 3 C). STAR will also produce genome mapped data, which",
  "discussion": "Discussion The differentially expressed genes calculated by the RCP can be further explored with a variety of tools designed for higher-order analysis. For example, there are tools that can look for enriched pathways, gene ontology terms, or protein and/or metabolite networks. Popular software tools among the GeneLab working group members include WebGestalt ( Liao et al., 2019 ), STRING ( Szklarczyk et al., 2019 ), GSEA ( Subramanian et al., 2005 ), PIANO ( Väremo et al. 2013 ), Reactome ( Szklarczyk et al., 2019 ), and ToppFun ( Chen et al., 2009 ). There is no universal consensus on which tools are the most useful for higher-order analysis ( Nguyen et al., 2019 ). RCP users are encouraged to try multiple tools in order to analyze their data from a variety of perspectives. The RCP has been designed to handle sequencing experiments that either lack or include the ERCC RNA spike-in mix—a set of 96 polyadenylated RNAs that can be used during differential gene expression calculation to normalize read counts across samples ( Munro et al., 2014 ). However, the use of normalization according to ERCC spike-ins remains controversial among AWG members, and Munro et al. suggested its usage only for determining limit of detection of ratio (LODR), expression ratio variability, and measurement bias ( Munro et al., 2014 ). For this reason, ERCC normalization remains optional in the GeneLab pipeline, and both kinds of DGE outputs are provided in the GeneLab database. In addition, ERCC spike-in could have two other usages. First, it allows us to evaluate whether normalization succeeded in removing systemic bias between libraries by using methods such as Rlog and VST when normalizing the spike-in RNAs along with all other genes. Second, most normalization methods of RNA-seq data assume that most genes are not differentially expressed toward one direction. Comparing spike-in measurements between libraries will help us to estimate the validity of this assumption. A high number of biological replicates can increase certainty in the differentially expressed genes determined by the RCP. However, conducting experiments in spaceflight often limits the number of biological replicates that a researcher can include. Therefore, it is important to note that at least three biological replicates are required for the pipeline, specifically for DESeq2, to perform its statistical methods. However, at least six replicates are suggested in order to minimize the false discovery rate (FDR) ( Schurch et al., 2016 ). Finally, RNA-seq datasets hosted on GeneLab that do not contain biological replicates are only processed up until unnormalized (raw) counts are obtained, the step right before DESeq2 is used for DGE calculation. More advanced RCP users might have additional data inquiries that fall beyond the scope of this pipeline. For this reason, there are two parts of the pipeline that include additional output that are not used in our differential gene expression computation. The firs",
  "conclusion": ""
}